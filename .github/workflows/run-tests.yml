name: Run Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'main')}}

jobs:
  test:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        postgres_version: ["15.14", "16.10", "17.6", "18.0"]

    steps:
      - uses: actions/checkout@v5

      - uses: extractions/setup-just@v3

      # For uvx sqlfluff
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: "go/go.mod"
          cache-dependency-path: "go/go.sum"

      - name: Start Docker Compose
        run: docker compose up --wait
        env:
          POSTGRES_VERSION: ${{ matrix.postgres_version }}

      - name: Run tests and linters
        run: just --timestamp check
        env:
          POSTGRES_VERSION: ${{ matrix.postgres_version }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          working-directory: go
          version: latest
          args: --timeout 2m --verbose

  all-tests-passed:
    if: ${{ always() }}
    needs: test
    runs-on: ubuntu-24.04
    steps:
      # This approach is from: https://github.com/orgs/community/discussions/28864
      - name: Fail unless required checks pass
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') || contains(needs.*.result, 'skipped') }}
        run: exit 1
      - name: All matrix tests passed
        run: echo "All PostgreSQL versions tested successfully"
